openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger DoorKeeper
  license:
    name: MIT
servers:
  - url: http://localhost:8080/
paths:
  /register:
    post:
      summary: Register booking
      operationId: register
      tags:
        - door
      parameters:
        - in: header
          name: X-Token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Acceptance result and position
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /status:
    get:
      summary: Get status of booking
      operationId: getStatus
      tags:
        - door
      parameters:
        - in: header
          name: X-Token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Position
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Entry not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /entry:
    post:
      summary: Enter the office
      operationId: entry
      tags:
        - door
      parameters:
        - in: header
          name: X-Token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Permition
        '400':
          description: Entry is not allowed, because the office reached its maximum capacity
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Entry not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /exit:
    post:
      summary: Exit the office
      operationId: exit
      tags:
        - door
      parameters:
        - in: header
          name: X-Token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Exit
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Entry not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /capacity:
    patch:
      summary: Set the capacity of the office
      operationId: setCapacity
      tags:
        - door
      parameters:
        - in: header
          name: X-Token
          schema:
            type: string
          required: true
      requestBody:
        description: Contains new capacity and percentage values
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityBody'
      responses:
        '200':
          description: Done
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /vip:
    get:
      summary: List VIP users
      operationId: getVips
      tags:
        - vip
      parameters:
        - in: header
          name: X-Token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: User added as VIP
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VipUsers"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Add VIP user
      operationId: addVip
      tags:
        - vip
      parameters:
        - in: header
          name: X-Token
          schema:
            type: string
          required: true
      requestBody:
        description: Contains VIP user's identifier
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VipUser'
      responses:
        '201':
          description: User added as VIP
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vip/{userId}:
    delete:
      summary: Remove VIP user
      operationId: deleteVip
      tags:
        - vip
      parameters:
        - in: header
          name: X-Token
          schema:
            type: string
          required: true
        - in: path
          name: userId
          description: VIP user's identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User removed from VIP users
        '404':
          description: User not found with given id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    RegisterResponse:
      type: object
      required:
        - canEnter
      properties:
        canEnter:
          type: boolean
        position:
          type: integer
          format: int32
    StatusResponse:
      type: object
      required:
        - position
      properties:
        position:
          type: integer
          format: int32
    CapacityBody:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
        percentage:
          type: integer
          format: int32
    VipUsers:
      required:
        - vipUsers
      type: object
      properties:
        vipUsers:
          type: array
          items:
            type: string
    VipUser:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
